{"version":3,"file":"static/js/951.a95e99f2.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.15.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.15.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.15.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","frame","HoverGesture","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","push","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","exec","parseCSSVariable","fallback","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","object","getPrototypeOf","desc","getOwnPropertyDescriptor","apply","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}