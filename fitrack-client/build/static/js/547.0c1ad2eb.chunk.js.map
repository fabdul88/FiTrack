{"version":3,"file":"static/js/547.0c1ad2eb.chunk.js","mappings":"mTAQMA,EAAS,WACb,OAA4CC,EAAAA,EAAAA,UAAS,CACnDC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,KANnB,eAAOC,EAAP,KAAuBC,EAAvB,KAUMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAyCC,EAAAA,EAAAA,MAAzC,eAAOC,EAAP,YAAmBC,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,MAEtBC,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,IAAjB,IAAzBH,UAERI,EAAAA,EAAAA,YAAU,WACJJ,GACFR,EAAS,SAEZ,GAAE,CAACA,EAAUQ,IAEd,IAAMK,EAAe,SAACC,GACpBf,GAAkB,kBACbD,GADY,cAEdgB,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,QAE7B,EAEKC,EAAY,yCAAG,WAAOJ,GAAP,yFACnBA,EAAEK,iBACIC,EAAO,CACX5B,UAAWM,EAAeN,UAC1BC,SAAUK,EAAeL,SACzBC,SAAUI,EAAeJ,SACzBC,MAAOG,EAAeH,MACtBC,SAAUE,EAAeF,SACzBC,gBAAiBC,EAAeD,iBAElCwB,QAAQC,IAAI,sBAAuBF,GAVhB,kBAgBCf,EAAS,CACzBb,UAAW4B,EAAK5B,UAChBC,SAAU2B,EAAK3B,SACfC,SAAU0B,EAAK1B,SACfC,MAAOyB,EAAKzB,MACZC,SAAUwB,EAAKxB,SACfC,gBAAiBuB,EAAKvB,kBACrB0B,SAvBc,OAgBXC,EAhBW,OAwBjBC,EAAAA,GAAMC,QAAQ,2BAEdxB,GAASyB,EAAAA,EAAAA,KAAe,UAAKH,KAC7BxB,EAAS,UA3BQ,kDA6BjByB,EAAAA,GAAMlB,OAAM,2CAAKa,YAAL,eAAWQ,UAAW,KAAIrB,OACtCc,QAAQC,KAAI,2CAAKF,YAAL,eAAWQ,UAAW,KAAIrB,OA9BrB,0DAAH,sDAmClB,OACE,iBAAKsB,UAAU,SAAf,WACE,SAAC,KAAD,CAASC,SAAS,kBAClB,0BACE,qBAASD,UAAU,eAAnB,WACE,gBAAKA,UAAU,0BAAf,UACE,eAAIA,UAAU,gBAAd,uBAEF,gBAAKA,UAAU,0BAAf,UACE,gBAAKA,UAAU,qBAEjB,gBAAKA,UAAU,yBAAf,UACE,kBAAME,SAAU,SAACjB,GAAD,OAAOI,EAAaJ,EAApB,EAAhB,WACE,iBAAKe,UAAU,8BAAf,WACE,kBAAOA,UAAU,0BAA0BG,QAAQ,YAAnD,yBAGA,kBACEH,UAAU,oBACVI,KAAK,OACLjB,KAAK,YACLkB,GAAG,YACHC,SAAU,SAACrB,GAAD,OAAOD,EAAaC,EAApB,QAGd,iBAAKe,UAAU,6BAAf,WACE,kBAAOA,UAAU,yBAAyBG,QAAQ,WAAlD,wBAGA,kBACEH,UAAU,mBACVI,KAAK,OACLjB,KAAK,WACLkB,GAAG,WACHC,SAAU,SAACrB,GAAD,OAAOD,EAAaC,EAApB,QAGd,iBAAKe,UAAU,6BAAf,WACE,kBAAOA,UAAU,yBAAyBG,QAAQ,WAAlD,uBAGA,kBACEH,UAAU,mBACVI,KAAK,OACLjB,KAAK,WACLkB,GAAG,WACHC,SAAU,SAACrB,GAAD,OAAOD,EAAaC,EAApB,QAGd,iBAAKe,UAAU,0BAAf,WACE,kBAAOA,UAAU,sBAAsBG,QAAQ,QAA/C,oBAGA,kBACEH,UAAU,gBACVI,KAAK,QACLjB,KAAK,QACLkB,GAAG,QACHC,SAAU,SAACrB,GAAD,OAAOD,EAAaC,EAApB,QAGd,iBAAKe,UAAU,6BAAf,WACE,kBAAOA,UAAU,yBAAyBG,QAAQ,WAAlD,uBAGA,kBACEH,UAAU,mBACVI,KAAK,WACLjB,KAAK,WACLkB,GAAG,WACHC,SAAU,SAACrB,GAAD,OAAOD,EAAaC,EAApB,QAGd,iBAAKe,UAAU,qCAAf,WACE,kBACEA,UAAU,iCACVG,QAAQ,kBAFV,+BAMA,kBACEH,UAAU,2BACVI,KAAK,WACLjB,KAAK,kBACLkB,GAAG,kBACHC,SAAU,SAACrB,GAAD,OAAOD,EAAaC,EAApB,QAGd,iBAAKe,UAAU,2BAAf,UAcGtB,IACC,cACE6B,MAAO,CACLC,MAAO,UACPC,OAAQ,oBACRC,QAAS,MACTC,aAAc,MACdC,WAAY,yBANhB,SASGlC,EAAMa,KAAKQ,WAGhB,mBAAQC,UAAU,iBAAiBI,KAAK,SAAxC,SACG3B,EAAY,aAAe,eAGhC,0BACE,sDAC2B,SAAC,KAAD,CAAMoC,GAAG,SAAT,oCAS1C,C","sources":["pages/SignUp/SignUp.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRegisterMutation } from '../../slices/usersApiSlice';\nimport { setCredentials } from '../../slices/authSlice';\nimport toast, { Toaster } from 'react-hot-toast';\nimport './signup.scss';\n\nconst SignUp = () => {\n  const [registeredUser, setRegisteredUser] = useState({\n    firstname: '',\n    lastname: '',\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  // const [matchPasswordError, setMatchPasswordError] = useState(false);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [register, { isLoading, error }] = useRegisterMutation();\n\n  const { userInfo } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate('/login');\n    }\n  }, [navigate, userInfo]);\n\n  const handleChange = (e) => {\n    setRegisteredUser({\n      ...registeredUser,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = {\n      firstname: registeredUser.firstname,\n      lastname: registeredUser.lastname,\n      username: registeredUser.username,\n      email: registeredUser.email,\n      password: registeredUser.password,\n      confirmPassword: registeredUser.confirmPassword,\n    };\n    console.log('REGISTER DATA>>>>>>', data);\n    // if (registeredUser.password !== registeredUser.confirmPassword) {\n    //   toast.error('Passwords do not match');\n    //   // setMatchPasswordError(true);\n    // } // else {\n    try {\n      const res = await register({\n        firstname: data.firstname,\n        lastname: data.lastname,\n        username: data.username,\n        email: data.email,\n        password: data.password,\n        confirmPassword: data.confirmPassword,\n      }).unwrap();\n      toast.success('Successfully logged in!');\n      // setMatchPasswordError(false);\n      dispatch(setCredentials({ ...res }));\n      navigate('/login');\n    } catch (err) {\n      toast.error(err?.data?.message || err.error);\n      console.log(err?.data?.message || err.error);\n    }\n    // }\n  };\n\n  return (\n    <div className=\"signup\">\n      <Toaster position=\"bottom-right\" />\n      <div>\n        <section className=\"signup__card\">\n          <div className=\"signup__title-container\">\n            <h2 className=\"signup__title\">SignUp</h2>\n          </div>\n          <div className=\"signup__image-container\">\n            <div className=\"signup__image\"></div>\n          </div>\n          <div className=\"signup__form-container\">\n            <form onSubmit={(e) => handleSubmit(e)}>\n              <div className=\"signup__firstname-container\">\n                <label className=\"signup__firstname-label\" htmlFor=\"firstname\">\n                  First Name\n                </label>\n                <input\n                  className=\"signup__firstname\"\n                  type=\"text\"\n                  name=\"firstname\"\n                  id=\"firstname\"\n                  onChange={(e) => handleChange(e)}\n                />\n              </div>\n              <div className=\"signup__lastname-container\">\n                <label className=\"signup__lastname-label\" htmlFor=\"lastname\">\n                  Last Name\n                </label>\n                <input\n                  className=\"signup__lastname\"\n                  type=\"text\"\n                  name=\"lastname\"\n                  id=\"lastname\"\n                  onChange={(e) => handleChange(e)}\n                />\n              </div>\n              <div className=\"signup__username-container\">\n                <label className=\"signup__username-label\" htmlFor=\"username\">\n                  Username\n                </label>\n                <input\n                  className=\"signup__username\"\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  onChange={(e) => handleChange(e)}\n                />\n              </div>\n              <div className=\"signup__email-container\">\n                <label className=\"signup__email-label\" htmlFor=\"email\">\n                  Email\n                </label>\n                <input\n                  className=\"signup__email\"\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  onChange={(e) => handleChange(e)}\n                />\n              </div>\n              <div className=\"signup__password-container\">\n                <label className=\"signup__password-label\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"signup__password\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={(e) => handleChange(e)}\n                />\n              </div>\n              <div className=\"signup__confirm-password-container\">\n                <label\n                  className=\"signup__confirm-password-label\"\n                  htmlFor=\"confirmPassword\"\n                >\n                  Confirm Password\n                </label>\n                <input\n                  className=\"signup__confirm-password\"\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  id=\"confirmPassword\"\n                  onChange={(e) => handleChange(e)}\n                />\n              </div>\n              <div className=\"signup__button-container\">\n                {/* {matchPasswordError && (\n                  <p\n                    style={{\n                      color: '#ffffff',\n                      border: '1px solid #8f300d',\n                      padding: '5px',\n                      borderRadius: '4px',\n                      background: 'rgba(143, 48, 13,0.8)',\n                    }}\n                  >\n                    Passwords do not match\n                  </p>\n                )} */}\n                {error && (\n                  <p\n                    style={{\n                      color: '#ffffff',\n                      border: '1px solid #8f300d',\n                      padding: '5px',\n                      borderRadius: '4px',\n                      background: 'rgba(143, 48, 13,0.8)',\n                    }}\n                  >\n                    {error.data.message}\n                  </p>\n                )}\n                <button className=\"signup__button\" type=\"submit\">\n                  {isLoading ? 'Loading...' : 'Signup'}\n                </button>\n              </div>\n              <div>\n                <p>\n                  Already have an account? <Link to=\"/login\">Login</Link>\n                </p>\n              </div>\n            </form>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport { SignUp };\n"],"names":["SignUp","useState","firstname","lastname","username","email","password","confirmPassword","registeredUser","setRegisteredUser","navigate","useNavigate","dispatch","useDispatch","useRegisterMutation","register","isLoading","error","userInfo","useSelector","state","auth","useEffect","handleChange","e","target","name","value","handleSubmit","preventDefault","data","console","log","unwrap","res","toast","success","setCredentials","message","className","position","onSubmit","htmlFor","type","id","onChange","style","color","border","padding","borderRadius","background","to"],"sourceRoot":""}