{"version":3,"file":"static/js/284.62d60262.chunk.js","mappings":"mIAEO,SAASA,EAASC,EAAGC,GAC1B,IAAIC,EAAI,CACNC,EAAGH,EAAEI,cAAgB,EACrBC,EAAGL,EAAEM,aACLC,EAAGP,EAAEQ,cACLC,EAAGT,EAAEU,gBACLC,EAAGX,EAAEY,iBAMP,OAJAX,EAAIA,EAAEY,QAAQ,qBAAqB,SAAUC,GAC3C,QAASA,EAAEC,OAAS,EAAI,IAAM,IAAMb,EAAEY,EAAEE,OAAO,KAAKA,OAAO,EAC5D,KAEQH,QAAQ,SAAS,SAAUC,GAClC,OAAOd,EAAEiB,cAAcC,WAAWF,OAAOF,EAAEC,OAC5C,GACF,C,yNCRKI,EAAgB,WAAO,IAAD,MAC1B,GAAqBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,IAAjB,IAAzBC,EAAR,EAAQA,SACRC,QAAQC,IAAIF,GAEZ,IAAMG,GAAWC,EAAAA,EAAAA,MAGXC,IAFWC,EAAAA,EAAAA,MAGG,kBAIdC,EAAsB,CAE1BC,SAAU,OAAMR,QAAN,IAAMA,GAAN,UAAMA,EAAUS,YAAhB,aAAM,EAAgBD,SAChCE,YAAa,GACbC,SAAU,EACVC,MAAMpC,EAAAA,EAAAA,GAAS,IAAIqC,KAAQ,eAY7B,OAA0BC,EAAAA,EAAAA,aAT1B,SAAiBhB,EAAOiB,GACtB,OAAQA,EAAOC,OACRX,GACI,kBAAKP,GAAZ,cAAoBiB,EAAOE,MAAQF,EAAOG,SAEnC,UAAKX,EAEjB,GAE6CA,GAA9C,eAAOT,EAAP,KAAcqB,EAAd,KAEMC,EAAmB,SAACC,GACxBF,EAAS,CACPH,KAAMX,EACNY,MAAOI,EAAMC,OAAOC,KACpBL,MAAOG,EAAMC,OAAOJ,OAEvB,EAyED,OACE,iBAAKM,UAAU,mBAAf,WACE,SAAC,KAAD,CAASC,SAAS,kBAClB,UAACC,EAAA,EAAOC,IAAR,CACEH,UAAU,yBACVI,QAAQ,UACRC,QAAQ,KACRC,KAAK,MACLC,SAhCe,CACnBH,QAAS,CACPI,QAAS,EACTvD,EAAG,SACHwD,MAAO,GAETC,GAAI,CACFF,QAAS,EACTvD,EAAG,EACHwD,MAAO,GAETE,IAAK,CACHH,QAAS,EACTvD,EAAG,QACHwD,MAAO,IAmBLG,WAfiB,CACrBpB,KAAM,QACNqB,KAAM,aACN1B,SAAU,IAMR,WAQE,gBAAKa,UAAU,oCAAf,UACE,eAAIA,UAAU,0BAAd,+BAEF,gBAAKA,UAAU,mCAAf,UACE,kBACEc,SAvFV,SAAkBC,GAChBA,EAAEC,iBACF,IAAMC,GAAO,UACR3C,GAGLG,QAAQC,IAAI,kBAAmBuC,GAE/B,IAAMlB,EAAO,CACXf,SAAUV,EAAMU,UAGZkC,EAAoBC,EAAAA,EACvBC,KAAK,oBAAqBH,GAC1BI,MAAK,SAACC,GACL3C,EAAS,eAAgB,CAAEL,MAAO,CAAEU,SAAUe,KAC9CtB,QAAQC,IAAI4C,EAAIrC,KACjB,IACAsC,OAAM,SAACC,GACN,MAAM,IAAIC,MAAMD,EACjB,IAEHE,EAAAA,GAAMC,QACJT,EACA,CACEU,QAAS,aACTC,MAAO,yBACPC,QAAS,iCAEX,CACEC,MAAO,CACLC,SAAU,QACVC,WAAY,wBACZC,eAAgB,YAChBC,MAAO,WAETL,QAAS,CACP3C,SAAU,KAEZ0C,MAAO,CACL1C,SAAU,MAIjB,EA4CSa,UAAU,yBACVT,OAAO,GAHT,WAKE,iBAAKS,UAAU,uCAAf,WACE,kBACEA,UAAU,mCACVoC,QAAQ,WAFV,uBAMA,kBACE5C,KAAK,OACLO,KAAK,WACLsC,GAAG,WACHrC,UAAU,6BACVN,MAAK,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAOU,SAGdsD,UAAkB,OAAR9D,QAAQ,IAARA,GAAA,UAAAA,EAAUS,YAAV,mBAAgBD,gBAAhB,eAA0BhB,QAAS,QAIjD,iBAAKgC,UAAU,0CAAf,WACE,kBACEA,UAAU,sCACVoC,QAAQ,cAFV,0BAMA,qBACEC,GAAG,cACHtC,KAAK,cACLC,UAAU,gCACVN,MAAOpB,EAAMY,YACbqD,SAAU,SAAC1C,GAAD,OAAWD,EAAiBC,EAA5B,EACV2C,YAAY,0CAGhB,iBAAKxC,UAAU,uCAAf,WACE,kBACEA,UAAU,mCACVoC,QAAQ,WAFV,iCAMA,kBACEC,GAAG,WACHtC,KAAK,WACLC,UAAU,6BACVR,KAAK,SACLiD,IAAI,IACJ/C,MAAOpB,EAAMa,SACboD,SAAU,SAAC1C,GAAD,OAAWD,EAAiBC,EAA5B,QAGd,iBAAKG,UAAU,mCAAf,WACE,kBAAOA,UAAU,+BAA+BoC,QAAQ,OAAxD,mBAGA,kBACEC,GAAG,OACHtC,KAAK,OACLC,UAAU,yBACVR,KAAK,OACLkD,SAAUpE,EAAMc,KAChBM,MAAOpB,EAAMc,KACbqD,KAAKzF,EAAAA,EAAAA,GAAS,IAAIqC,KAAQ,cAC1BkD,SAAU,SAAC1C,GAAD,OAAWD,EAAiBC,EAA5B,QAGd,gBAAKG,UAAU,qCAAf,UACE,mBAAQA,UAAU,2BAA2BD,KAAK,WAAlD,oCASb,C","sources":["helpers/date2srt.js","pages/CreateWorkout/CreateWorkout.jsx"],"sourcesContent":["// convert date to yyyy-MM-dd format\n\nexport function date2str(x, y) {\n  let z = {\n    M: x.getUTCMonth() + 1,\n    d: x.getUTCDate(),\n    h: x.getUTCHours(),\n    m: x.getUTCMinutes(),\n    s: x.getUTCSeconds(),\n  };\n  y = y.replace(/(M+|d+|h+|m+|s+)/g, function (v) {\n    return ((v.length > 1 ? '0' : '') + z[v.slice(-1)]).slice(-2);\n  });\n\n  return y.replace(/(y+)/g, function (v) {\n    return x.getFullYear().toString().slice(-v.length);\n  });\n}\n","import React, { useReducer } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { date2str } from '../../helpers/date2srt';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\nimport './createWorkout.scss';\n\nconst CreateWorkout = () => {\n  const { userInfo } = useSelector((state) => state.auth);\n  console.log(userInfo);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const ACTION = {\n    ADD_WORKOUT_DATA: 'addWorkoutData',\n    GET_USERNAME: 'getUsername',\n  };\n\n  const initialWorkoutState = {\n    // username: '' || location?.state?.username,\n    username: '' || userInfo?.data?.username,\n    description: '',\n    duration: 0,\n    date: date2str(new Date(), 'yyyy-MM-dd'),\n  };\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case ACTION.ADD_WORKOUT_DATA:\n        return { ...state, [action.field]: action.value };\n      default:\n        return { ...initialWorkoutState };\n    }\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialWorkoutState);\n\n  const updateInputValue = (event) => {\n    dispatch({\n      type: ACTION.ADD_WORKOUT_DATA,\n      field: event.target.name,\n      value: event.target.value,\n    });\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const workout = {\n      ...state,\n    };\n\n    console.log('ADD WORKOUT>>>>', workout);\n\n    const name = {\n      username: state.username,\n    };\n\n    const addWorkoutPromise = axios\n      .post('/api/workouts/add', workout)\n      .then((res) => {\n        navigate('/workoutlist', { state: { username: name } });\n        console.log(res.data);\n      })\n      .catch((err) => {\n        throw new Error(err);\n      });\n\n    toast.promise(\n      addWorkoutPromise,\n      {\n        loading: 'Processing',\n        error: 'error adding a workout',\n        success: 'successfully added a workout ',\n      },\n      {\n        style: {\n          minWidth: '250px',\n          background: 'rgba(255,255,255,0.4)',\n          backdropFilter: 'blur(6px)',\n          color: '#000000',\n        },\n        success: {\n          duration: 5000,\n        },\n        error: {\n          duration: 5000,\n        },\n      }\n    );\n  }\n\n  // Framer motion animations\n  const cardVariants = {\n    initial: {\n      opacity: 0,\n      x: '-500vw',\n      scale: 0,\n    },\n    in: {\n      opacity: 1,\n      x: 0,\n      scale: 1,\n    },\n    out: {\n      opacity: 0,\n      x: '500vw',\n      scale: 0,\n    },\n  };\n  // Framer motion animations\n  const cardTransition = {\n    type: 'tween',\n    ease: 'anticipate',\n    duration: 0.8,\n  };\n\n  return (\n    <div className=\"create-container\">\n      <Toaster position=\"bottom-right\" />\n      <motion.div\n        className=\"create-container__card\"\n        initial=\"initial\"\n        animate=\"in\"\n        exit=\"out\"\n        variants={cardVariants}\n        transition={cardTransition}\n      >\n        <div className=\"create-container__title-container\">\n          <h2 className=\"create-container__title\">CREATE WORKOUT</h2>\n        </div>\n        <div className=\"create-container__form-container\">\n          <form\n            onSubmit={onSubmit}\n            className=\"create-container__form\"\n            action=\"\"\n          >\n            <div className=\"create-container__username-container\">\n              <label\n                className=\"create-container__username-label\"\n                htmlFor=\"username\"\n              >\n                USERNAME\n              </label>\n              <input\n                type=\"text\"\n                name=\"userName\"\n                id=\"username\"\n                className=\"create-container__username\"\n                value={state?.username}\n                // value={userInfo?.data?.username}\n                // disabled={state?.username?.length > 0 ? true : false}\n                disabled={userInfo?.data?.username?.length > 0 ? true : false}\n                // onChange={(event) => updateInputValue(event)}\n              />\n            </div>\n            <div className=\"create-container__description-container\">\n              <label\n                className=\"create-container__description-label\"\n                htmlFor=\"description\"\n              >\n                DESCRIPTION\n              </label>\n              <textarea\n                id=\"description\"\n                name=\"description\"\n                className=\"create-container__description\"\n                value={state.description}\n                onChange={(event) => updateInputValue(event)}\n                placeholder=\"Ex. Walk, Stretch, Weight lift...\"\n              />\n            </div>\n            <div className=\"create-container__duration-container\">\n              <label\n                className=\"create-container__duration-label\"\n                htmlFor=\"duration\"\n              >\n                DURATION (In Mins)\n              </label>\n              <input\n                id=\"duration\"\n                name=\"duration\"\n                className=\"create-container__duration\"\n                type=\"number\"\n                min=\"0\"\n                value={state.duration}\n                onChange={(event) => updateInputValue(event)}\n              />\n            </div>\n            <div className=\"create-container__date-container\">\n              <label className=\"create-container__date-label\" htmlFor=\"date\">\n                DATE\n              </label>\n              <input\n                id=\"date\"\n                name=\"date\"\n                className=\"create-container__date\"\n                type=\"date\"\n                selected={state.date}\n                value={state.date}\n                min={date2str(new Date(), 'yyyy-MM-dd')}\n                onChange={(event) => updateInputValue(event)}\n              />\n            </div>\n            <div className=\"create-container__button-container\">\n              <button className=\"create-container__button\" name=\"let's go\">\n                LET'S GO !\n              </button>\n            </div>\n          </form>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport { CreateWorkout };\n"],"names":["date2str","x","y","z","M","getUTCMonth","d","getUTCDate","h","getUTCHours","m","getUTCMinutes","s","getUTCSeconds","replace","v","length","slice","getFullYear","toString","CreateWorkout","useSelector","state","auth","userInfo","console","log","navigate","useNavigate","ACTION","useLocation","initialWorkoutState","username","data","description","duration","date","Date","useReducer","action","type","field","value","dispatch","updateInputValue","event","target","name","className","position","motion","div","initial","animate","exit","variants","opacity","scale","in","out","transition","ease","onSubmit","e","preventDefault","workout","addWorkoutPromise","axios","post","then","res","catch","err","Error","toast","promise","loading","error","success","style","minWidth","background","backdropFilter","color","htmlFor","id","disabled","onChange","placeholder","min","selected"],"sourceRoot":""}