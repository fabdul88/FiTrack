{"version":3,"file":"static/js/470.4de2b427.chunk.js","mappings":"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","sources":["helpers/date2srt.js","pages/EditWorkout/EditWorkout.jsx"],"sourcesContent":["// convert date to yyyy-MM-dd format\n\nexport function date2str(x, y) {\n  let z = {\n    M: x.getUTCMonth() + 1,\n    d: x.getUTCDate(),\n    h: x.getUTCHours(),\n    m: x.getUTCMinutes(),\n    s: x.getUTCSeconds(),\n  };\n  y = y.replace(/(M+|d+|h+|m+|s+)/g, function (v) {\n    return ((v.length > 1 ? '0' : '') + z[v.slice(-1)]).slice(-2);\n  });\n\n  return y.replace(/(y+)/g, function (v) {\n    return x.getFullYear().toString().slice(-v.length);\n  });\n}\n","import React, { useEffect, useReducer } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { date2str } from '../../helpers/date2srt';\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\nimport './editWorkout.scss';\n\nconst EditWorkout = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const ACTION = {\n    EDIT_WORKOUT_DATA: 'editWorkoutData',\n    SET_INPUTS_TO_FETCHED_DATA: 'getFetchedData',\n  };\n\n  const initialWorkoutState = {\n    username: '',\n    description: '',\n    duration: 0,\n    date: date2str(new Date(), 'yyyy-MM-dd'),\n  };\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case ACTION.EDIT_WORKOUT_DATA:\n        return { ...state, [action.field]: action.value };\n      case ACTION.SET_INPUTS_TO_FETCHED_DATA:\n        return action.payload;\n      default:\n        return { ...initialWorkoutState };\n    }\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialWorkoutState);\n\n  useEffect(() => {\n    axios\n      .get(`/api/workouts/${params.id}`)\n      .then((res) => {\n        dispatch({\n          type: ACTION.SET_INPUTS_TO_FETCHED_DATA,\n          payload: {\n            ...initialWorkoutState,\n            username: res?.data.username,\n            description: res?.data.description,\n            duration: res?.data.duration,\n            date: date2str(new Date(res?.data.date), 'yyyy-MM-dd'),\n          },\n        });\n      })\n      .catch((err) => console.log(err));\n  }, [params.id]);\n\n  const updateInputValue = (event) => {\n    dispatch({\n      type: ACTION.EDIT_WORKOUT_DATA,\n      field: event.target.name,\n      value: event.target.value,\n    });\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const workout = {\n      username: state.username,\n      description: state.description,\n      duration: state.duration,\n      date: state.date,\n    };\n\n    const editWorkoutPromise = axios\n      .patch(`/api/workouts/update/${params.id}`, workout)\n      .then((res) => {\n        navigate({\n          pathname: '/workoutlist',\n          state: { username: state.username },\n        });\n        return res.data;\n      })\n      .catch((err) => {\n        throw new Error(err);\n      });\n\n    toast.promise(\n      editWorkoutPromise,\n      {\n        loading: 'Processing',\n        error: 'error editing a workout',\n        success: 'Successfully edited a workout',\n      },\n      {\n        style: {\n          minWidth: '250px',\n          background: 'rgba(255,255,255,0.4)',\n          backdropFilter: 'blur(6px)',\n          color: '#000000',\n        },\n        success: {\n          duration: 5000,\n        },\n        error: {\n          duration: 5000,\n        },\n      }\n    );\n  }\n\n  // Framer motion animations\n  const cardVariants = {\n    in: {\n      opacity: 1,\n      y: 0,\n      scale: 1,\n    },\n    out: {\n      opacity: 0,\n      y: '-500vh',\n      scale: 0,\n    },\n  };\n  // Framer motion animations\n  const cardTransition = {\n    type: 'tween',\n    ease: 'anticipate',\n    duration: 0.8,\n  };\n\n  return (\n    <div className=\"edit-container\">\n      <Toaster position=\"bottom-right\" />\n      <motion.div\n        className=\"edit-container__card\"\n        initial=\"out\"\n        animate=\"in\"\n        exit=\"out\"\n        variants={cardVariants}\n        transition={cardTransition}\n      >\n        <div className=\"edit-container__title-container\">\n          <h2 className=\"edit-container__title\">EDIT WORKOUT</h2>\n        </div>\n        <div className=\"edit-container__form-container\">\n          <form onSubmit={onSubmit} className=\"edit-container__form\">\n            <div className=\"edit-container__username-container\">\n              <label\n                className=\"edit-container__username-label\"\n                htmlFor=\"username\"\n              >\n                USERNAME\n              </label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={state.username}\n                id=\"username\"\n                className=\"edit-container__username\"\n                disabled={state.username.length > 0 ? true : false}\n                onChange={(event) => updateInputValue(event)}\n              />\n            </div>\n            <div className=\"edit-container__description-container\">\n              <label\n                className=\"edit-container__description-label\"\n                htmlFor=\"description\"\n              >\n                DESCRIPTION\n              </label>\n              <textarea\n                id=\"description\"\n                className=\"edit-container__description\"\n                name=\"description\"\n                value={state.description}\n                onChange={(event) => updateInputValue(event)}\n                placeholder=\"Ex. Walk, Stretch, Weight lift...\"\n              />\n            </div>\n            <div className=\"edit-container__duration-container\">\n              <label\n                className=\"edit-container__duration-label\"\n                htmlFor=\"duration\"\n              >\n                DURATION (In Mins)\n              </label>\n              <input\n                id=\"duration\"\n                className=\"edit-container__duration\"\n                name=\"duration\"\n                type=\"number\"\n                min=\"0\"\n                value={state.duration}\n                onChange={(event) => updateInputValue(event)}\n              />\n            </div>\n            <div className=\"edit-container__date-container\">\n              <label className=\"edit-container__date-label\" htmlFor=\"date\">\n                DATE\n              </label>\n              <input\n                id=\"date\"\n                className=\"edit-container__date\"\n                name=\"date\"\n                type=\"date\"\n                selected={state.date}\n                value={state.date}\n                min={date2str(new Date(), 'yyyy-MM-dd')}\n                onChange={(event) => updateInputValue(event)}\n              />\n            </div>\n            <div className=\"edit-container__button-container\">\n              <button className=\"edit-container__button\">UPDATE !</button>\n            </div>\n          </form>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport { EditWorkout };\n"],"names":["date2str","x","y","z","M","getUTCMonth","d","getUTCDate","h","getUTCHours","m","getUTCMinutes","s","getUTCSeconds","replace","v","length","slice","getFullYear","toString","EditWorkout","params","useParams","navigate","useNavigate","ACTION","initialWorkoutState","username","description","duration","date","Date","useReducer","state","action","type","field","value","payload","dispatch","useEffect","axios","get","id","then","res","data","catch","err","console","log","updateInputValue","event","target","name","className","position","motion","div","initial","animate","exit","variants","in","opacity","scale","out","transition","ease","onSubmit","e","preventDefault","workout","editWorkoutPromise","patch","pathname","Error","toast","promise","loading","error","success","style","minWidth","background","backdropFilter","color","htmlFor","disabled","onChange","placeholder","min","selected"],"sourceRoot":""}